(in-package goal)

;name: wasseem-attack.gc



(deftype task-manager-wasseem-attack (task-manager)
    ((maker-count      uint8)
     (wave             uint8)
     (increment        uint8)
    )
  (:state-methods
  active
  check-active
  win
  dead
  )
  )


(defstate win (task-manager-wasseem-attack) ;ripped from was-pre-game.gc's win state
  :virtual #t
  :code (behavior ()
    (suspend-for (seconds 5))
    (let* ((v1-2 (-> *game-info* sub-task-list (game-task-node wascity-pre-game-battle)))
           (gp-0 (if (-> v1-2 manager)
                     (-> v1-2 manager manager)
                     (the-as handle #f)
                     )
                 )
           )
      (send-event (handle->process gp-0) 'complete)
      (process-spawn scene-player :init scene-player-init "wascity-pre-game-res" #t "wascityb-seem" :name "scene-player")
      (task-node-close! (game-task-node wascity-pre-game-post-game) #t)
      )
    )
  )

  (defstate dead (task-manager-wasseem-attack)
  :virtual #t
  :code (behavior ()
      (kill-all-sat)
      (task-node-open! (game-task-node wascity-pre-game-wait) #t)
      (suspend)
    )
  )


  (defstate check-active (task-manager-wasseem-attack) ;loops
    :virtual #t
    :code (behavior ()
              (loop
                (let (
                  (vec1 (new 'static 'vector :x (meters 1459.8339) :y (meters 26.78) :z (meters -372.99) :w 1.0))
                  (vec2 (new 'static 'vector :x (meters 1466.5053) :y (meters 27.62) :z (meters -355.66) :w 1.0))
                  (vec3 (new 'static 'vector :x (meters 1492.99) :y (meters 26.8) :z (meters -367.22) :w 1.0))
                  (vec-behind1 (new 'static 'vector :x (meters 1483.83) :y (meters 28.88) :z (meters -336.54) :w 1.0))
                  (vec-behind2 (new 'static 'vector :x (meters 1477.10) :y (meters 28.31) :z (meters -338.5402) :w 1.0))
              )
                (when (>= (vector-vector-distance 
                              (new 'static 'vector :x (meters 1459.8339) :y (meters 26.78) :z (meters -372.99) :w 1.0)
                              (target-pos 0)
                              )
                              480000.0
                              )
                                (go-virtual dead)
                              )
                  (when (or
                          (<= the-maker-count 0)
                          (not (search-process-tree *active-pool* (lambda ((p process)) (type? p dp-bipedal))))
                        )
                      (suspend-for (seconds 0.8))
                      (+! (-> self wave) 1)
                      (+! (-> self increment) 1)
                      (when (= (-> self wave) 1)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec3)
                      (set! the-maker-count 2)
                  )
                  (when (= (-> self wave) 2)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec2)
                      (spawn-dark-maker vec3)
                      (set! the-maker-count 3)
                  )
                  (when (= (-> self wave) 3)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec2)
                      (spawn-dark-maker vec-behind2)
                      (set! the-maker-count 3)
                  )
                  (when (= (-> self wave) 4)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec-behind1)
                      (spawn-dark-maker vec-behind2)
                      (set! the-maker-count 3)
                  )
                  (when (= (-> self wave) 5)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec2)
                      (spawn-dark-maker vec3)
                      (spawn-dark-maker vec-behind1)
                      (spawn-dark-maker vec-behind2)
                      (set! the-maker-count 5)
                  )
                  (when (= (-> self wave) 6)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec2)
                      (spawn-dark-maker vec3)
                      (spawn-dark-maker vec-behind1)
                      (spawn-dark-maker vec-behind2)
                      (set! the-maker-count 5)
                  )
                  (when (= (-> self wave) 7)
                      (spawn-dark-maker vec1)
                      (spawn-dark-maker vec2)
                      (spawn-dark-maker vec3)
                      (spawn-dark-maker vec-behind1)
                      (spawn-dark-maker vec-behind2)
                      (set! the-maker-count 5)
                  )
                  (when (= (-> self wave) 8)
                    (set! (-> self wave) 0)
                    (+! enemy-noto 4)
                  )
                  (when (>= (-> self increment) 72)
                    (go-virtual win)
                  )
              )
          )
          ;(format *stdcon* "task-manager: wave ~D~%task-manager: the-maker-count ~D" (-> self wave) the-maker-count)
          (suspend)
        )
    )
  )

  (defstate active (task-manager-wasseem-attack) ;sets everything up
    :virtual #t
    :code (behavior ()
        (set-setting! 'music 'mineboss 0.0 0)
        (set! enemy-noto 1)
        (set! (-> self wave) 0)
        (set! (-> self increment) 0)
        (set! the-maker-count 0)
        (task-node-close! (game-task-node wascity-pre-game-resolution) #t)
        (suspend-for (seconds 0.5))
        (set-continue! *game-info* "wascityb-game" #t)
        (auto-save-user)
        (go-virtual check-active)
    )
    (none)
  )

  
  #| ALTERNATE CALL TO THIS TASK MANAGER BY HATKID FOR REFERENCE
  (deftype task-manager-wasseem-attack (task-manager)
  ((maker-count  uint8)
   (wave         uint8)
   (spawn-points (inline-array vector)))
  (:methods
   (check-for-spawn (_type_) object none)
   )
  (:state-methods
   active
   win
   new-wave
   )
)

   (defstate win (task-manager-wasseem-attack) ;ripped from was-pre-game.gc's win state
  :virtual #t
  :code (behavior ()
    (let* ((v1-2 (-> *game-info* sub-task-list (game-task-node wascity-pre-game-resolution)))
           (gp-0 (if (-> v1-2 manager)
                     (-> v1-2 manager manager)
                     (the-as handle #f)
                     )
                 )
           )
      (send-event (handle->process gp-0) 'complete)
      )
    )
  )

(defmethod check-for-spawn ((this task-manager-wasseem-attack))
  (when (<= the-maker-count 0)
    (case (-> this wave)
          ((1)
            (suspend-for (seconds 0.5))
            (spawn-dark-maker (-> this spawn-points 0))
            (spawn-dark-maker (-> this spawn-points 2))
            (set! the-maker-count 2)
            )
          ((2)
            (suspend-for (seconds 3))
            (spawn-dark-maker (-> this spawn-points 0))
            (spawn-dark-maker (-> this spawn-points 1))
            (spawn-dark-maker (-> this spawn-points 3))
            (set! the-maker-count 3)
            )
          ((3)
            (suspend-for (seconds 3))
            (spawn-dark-maker (-> this spawn-points 0))
            (spawn-dark-maker (-> this spawn-points 1))
            (spawn-dark-maker (-> this spawn-points 4))
            (set! the-maker-count 3)
            )
          ((4)
            (suspend-for (seconds 3))
            (spawn-dark-maker (-> this spawn-points 0))
            (spawn-dark-maker (-> this spawn-points 3))
            (spawn-dark-maker (-> this spawn-points 4))
            (set! the-maker-count 3)
            )
          ((5)
            (suspend-for (seconds 3))
            (spawn-dark-maker (-> this spawn-points 0))
            (spawn-dark-maker (-> this spawn-points 1))
            (spawn-dark-maker (-> this spawn-points 2))
            (spawn-dark-maker (-> this spawn-points 3))
            (spawn-dark-maker (-> this spawn-points 4))
            (set! the-maker-count 5)
            )
      )
  )
  (suspend)
  (none)
)

(defstate active (task-manager-wasseem-attack) ; sets everything up
  :virtual #t
  :code
  (behavior ()
    (set! (-> self wave) 0)
    (set! the-maker-count 0)
    (set! (-> self spawn-points)
          (new 'static
               'inline-array
               vector
               5
               (static-vectorm 1459.8339 26.78 -372.99)
               (static-vectorm 1463.6805 26.78 -376.08)
               (static-vectorm 1492.99 26.8 -367.22)
               (static-vectorm 1487.64 28.06 -346.1145)
               (static-vectorm 1465.36 27.78 -345.94)))
    (loop
      (when (and *target* (task-node-closed? (game-task-node wascity-pre-game-wait)))
        (when (<= the-maker-count 0)
            (+! (-> self wave) 1)
            (check-for-spawn self)
        )
        (when (and (>= (-> self wave) 6) (<= the-maker-count 0))
          (go-virtual win)
        )
        ;(format *stdcon* "task-manager: wave ~D" (-> self wave))
        ;(format *stdcon* "the-maker-count: ~D" the-maker-count)
        (suspend)
      )
    )
  )
)
  |#